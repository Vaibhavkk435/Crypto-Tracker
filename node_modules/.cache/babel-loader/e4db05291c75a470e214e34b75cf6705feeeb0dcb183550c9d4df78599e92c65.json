{"ast":null,"code":"class WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.dispatch = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectTimeout = 3000;\n  }\n  initialize(dispatch, symbols) {\n    this.dispatch = dispatch;\n    this.connect(symbols);\n  }\n  connect(symbols) {\n    try {\n      // Convert symbols to lowercase and create subscription string\n      const streams = symbols.map(symbol => `${symbol.toLowerCase()}usdt@trade`).join('/');\n      const wsUrl = `wss://stream.binance.com:9443/ws/${streams}`;\n      this.ws = new WebSocket(wsUrl);\n      this.ws.onopen = () => {\n        var _this$dispatch;\n        console.log('WebSocket Connected');\n        this.reconnectAttempts = 0;\n        (_this$dispatch = this.dispatch) === null || _this$dispatch === void 0 ? void 0 : _this$dispatch.setWsConnected(true);\n      };\n      this.ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          if (data.e === 'trade') {\n            var _this$dispatch2;\n            (_this$dispatch2 = this.dispatch) === null || _this$dispatch2 === void 0 ? void 0 : _this$dispatch2.updateCryptoPrice({\n              symbol: data.s.replace('USDT', ''),\n              price: parseFloat(data.p),\n              timestamp: data.T\n            });\n          }\n        } catch (error) {\n          console.error('Error processing WebSocket message:', error);\n        }\n      };\n      this.ws.onclose = () => {\n        var _this$dispatch3;\n        (_this$dispatch3 = this.dispatch) === null || _this$dispatch3 === void 0 ? void 0 : _this$dispatch3.setWsConnected(false);\n        this.handleReconnect(symbols);\n      };\n      this.ws.onerror = error => {\n        var _this$dispatch4;\n        console.error('WebSocket error:', error);\n        (_this$dispatch4 = this.dispatch) === null || _this$dispatch4 === void 0 ? void 0 : _this$dispatch4.setError('WebSocket connection error');\n      };\n    } catch (error) {\n      console.error('WebSocket connection error:', error);\n      this.handleReconnect(symbols);\n    }\n  }\n  handleReconnect(symbols) {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n      setTimeout(() => this.connect(symbols), this.reconnectTimeout);\n    } else {\n      var _this$dispatch5;\n      (_this$dispatch5 = this.dispatch) === null || _this$dispatch5 === void 0 ? void 0 : _this$dispatch5.setError('Unable to establish WebSocket connection after multiple attempts');\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\nexport const wsService = new WebSocketService();\nexport default wsService;","map":{"version":3,"names":["WebSocketService","constructor","ws","dispatch","reconnectAttempts","maxReconnectAttempts","reconnectTimeout","initialize","symbols","connect","streams","map","symbol","toLowerCase","join","wsUrl","WebSocket","onopen","_this$dispatch","console","log","setWsConnected","onmessage","event","data","JSON","parse","e","_this$dispatch2","updateCryptoPrice","s","replace","price","parseFloat","p","timestamp","T","error","onclose","_this$dispatch3","handleReconnect","onerror","_this$dispatch4","setError","setTimeout","_this$dispatch5","disconnect","close","wsService"],"sources":["C:/Users/DELL/OneDrive/Desktop/XYZ/src/services/websocket.ts"],"sourcesContent":["import { Dispatch } from '@reduxjs/toolkit';\r\nimport { updateCryptoPrice, setWsConnected, setError } from '../features/crypto/cryptoSlice';\r\n\r\nclass WebSocketService {\r\n  private ws: WebSocket | null = null;\r\n  private dispatch: Dispatch | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectTimeout = 3000;\r\n\r\n  initialize(dispatch: Dispatch, symbols: string[]) {\r\n    this.dispatch = dispatch;\r\n    this.connect(symbols);\r\n  }\r\n\r\n  private connect(symbols: string[]) {\r\n    try {\r\n      // Convert symbols to lowercase and create subscription string\r\n      const streams = symbols.map(symbol => `${symbol.toLowerCase()}usdt@trade`).join('/');\r\n      const wsUrl = `wss://stream.binance.com:9443/ws/${streams}`;\r\n\r\n      this.ws = new WebSocket(wsUrl);\r\n\r\n      this.ws.onopen = () => {\r\n        console.log('WebSocket Connected');\r\n        this.reconnectAttempts = 0;\r\n        this.dispatch?.setWsConnected(true);\r\n      };\r\n\r\n      this.ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          if (data.e === 'trade') {\r\n            this.dispatch?.updateCryptoPrice({\r\n              symbol: data.s.replace('USDT', ''),\r\n              price: parseFloat(data.p),\r\n              timestamp: data.T,\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error processing WebSocket message:', error);\r\n        }\r\n      };\r\n\r\n      this.ws.onclose = () => {\r\n        this.dispatch?.setWsConnected(false);\r\n        this.handleReconnect(symbols);\r\n      };\r\n\r\n      this.ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        this.dispatch?.setError('WebSocket connection error');\r\n      };\r\n    } catch (error) {\r\n      console.error('WebSocket connection error:', error);\r\n      this.handleReconnect(symbols);\r\n    }\r\n  }\r\n\r\n  private handleReconnect(symbols: string[]) {\r\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n      this.reconnectAttempts++;\r\n      console.log(`Attempting to reconnect... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\r\n      setTimeout(() => this.connect(symbols), this.reconnectTimeout);\r\n    } else {\r\n      this.dispatch?.setError('Unable to establish WebSocket connection after multiple attempts');\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.ws) {\r\n      this.ws.close();\r\n      this.ws = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const wsService = new WebSocketService();\r\nexport default wsService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}