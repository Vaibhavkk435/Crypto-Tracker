{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\XYZ\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCryptos, updateCryptoPrice } from './features/crypto/cryptoSlice';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockCryptoData = [{\n  id: 'bitcoin',\n  name: 'Bitcoin',\n  symbol: 'BTC',\n  price: 35000,\n  change24h: 2.5,\n  marketCap: 680000000000\n}, {\n  id: 'ethereum',\n  name: 'Ethereum',\n  symbol: 'ETH',\n  price: 2000,\n  change24h: 1.8,\n  marketCap: 240000000000\n}, {\n  id: 'cardano',\n  name: 'Cardano',\n  symbol: 'ADA',\n  price: 1.2,\n  change24h: -0.5,\n  marketCap: 40000000000\n}];\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    cryptos\n  } = useSelector(state => state.crypto);\n  useEffect(() => {\n    // Initialize with mock data\n    dispatch(setCryptos(mockCryptoData));\n\n    // Simulate real-time updates\n    const interval = setInterval(() => {\n      mockCryptoData.forEach(crypto => {\n        const randomChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n        const newPrice = crypto.price * (1 + randomChange / 100);\n        dispatch(updateCryptoPrice({\n          id: crypto.id,\n          price: newPrice,\n          change24h: crypto.change24h + randomChange / 4\n        }));\n      });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Crypto Price Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"crypto-grid\",\n      children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [crypto.name, \" (\", crypto.symbol, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [\"$\", crypto.price.toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `change ${crypto.change24h >= 0 ? 'positive' : 'negative'}`,\n          children: [\"24h Change: \", crypto.change24h.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"market-cap\",\n          children: [\"Market Cap: $\", (crypto.marketCap / 1000000000).toFixed(2), \"B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, crypto.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ai+Vzjh9X617nNO7he32nTvm3tw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setCryptos","updateCryptoPrice","jsxDEV","_jsxDEV","mockCryptoData","id","name","symbol","price","change24h","marketCap","App","_s","dispatch","cryptos","state","crypto","interval","setInterval","forEach","randomChange","Math","random","newPrice","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/XYZ/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './app/store';\r\nimport { setCryptos, updateCryptoPrice } from './features/crypto/cryptoSlice';\r\nimport './App.css';\r\n\r\nconst mockCryptoData = [\r\n  { id: 'bitcoin', name: 'Bitcoin', symbol: 'BTC', price: 35000, change24h: 2.5, marketCap: 680000000000 },\r\n  { id: 'ethereum', name: 'Ethereum', symbol: 'ETH', price: 2000, change24h: 1.8, marketCap: 240000000000 },\r\n  { id: 'cardano', name: 'Cardano', symbol: 'ADA', price: 1.2, change24h: -0.5, marketCap: 40000000000 },\r\n];\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { cryptos } = useSelector((state: RootState) => state.crypto);\r\n\r\n  useEffect(() => {\r\n    // Initialize with mock data\r\n    dispatch(setCryptos(mockCryptoData));\r\n\r\n    // Simulate real-time updates\r\n    const interval = setInterval(() => {\r\n      mockCryptoData.forEach(crypto => {\r\n        const randomChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n        const newPrice = crypto.price * (1 + randomChange / 100);\r\n        dispatch(updateCryptoPrice({\r\n          id: crypto.id,\r\n          price: newPrice,\r\n          change24h: crypto.change24h + randomChange / 4,\r\n        }));\r\n      });\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Crypto Price Tracker</h1>\r\n      </header>\r\n      <main className=\"crypto-grid\">\r\n        {cryptos.map(crypto => (\r\n          <div key={crypto.id} className=\"crypto-card\">\r\n            <h2>{crypto.name} ({crypto.symbol})</h2>\r\n            <p className=\"price\">${crypto.price.toLocaleString(undefined, {\r\n              minimumFractionDigits: 2,\r\n              maximumFractionDigits: 2,\r\n            })}</p>\r\n            <p className={`change ${crypto.change24h >= 0 ? 'positive' : 'negative'}`}>\r\n              24h Change: {crypto.change24h.toFixed(2)}%\r\n            </p>\r\n            <p className=\"market-cap\">\r\n              Market Cap: ${(crypto.marketCap / 1000000000).toFixed(2)}B\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}