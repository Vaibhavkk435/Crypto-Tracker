{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cryptos: [],\n  loading: false,\n  error: null,\n  wsConnected: false\n};\nexport const cryptoSlice = createSlice({\n  name: 'crypto',\n  initialState,\n  reducers: {\n    setCryptos: (state, action) => {\n      state.cryptos = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    setWsConnected: (state, action) => {\n      state.wsConnected = action.payload;\n    },\n    updateCryptoPrice: (state, action) => {\n      const crypto = state.cryptos.find(c => c.symbol === action.payload.symbol);\n      if (crypto) {\n        const oldPrice = crypto.price;\n        crypto.price = action.payload.price;\n        crypto.lastUpdate = action.payload.timestamp;\n\n        // Update chart data\n        crypto.chartData = [...crypto.chartData.slice(1), action.payload.price];\n\n        // Calculate price changes\n        const priceChange = (action.payload.price - oldPrice) / oldPrice * 100;\n        crypto.change1h = (crypto.change1h || 0) + priceChange;\n        crypto.change24h = (crypto.change24h || 0) + priceChange;\n        crypto.change7d = (crypto.change7d || 0) + priceChange;\n      }\n    }\n  }\n});\nexport const {\n  setCryptos,\n  setLoading,\n  setError,\n  setWsConnected,\n  updateCryptoPrice\n} = cryptoSlice.actions;\nexport default cryptoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cryptos","loading","error","wsConnected","cryptoSlice","name","reducers","setCryptos","state","action","payload","setLoading","setError","setWsConnected","updateCryptoPrice","crypto","find","c","symbol","oldPrice","price","lastUpdate","timestamp","chartData","slice","priceChange","change1h","change24h","change7d","actions","reducer"],"sources":["C:/Users/DELL/OneDrive/Desktop/XYZ/src/features/crypto/cryptoSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface CryptoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  logo: string;\r\n  price: number;\r\n  change1h: number;\r\n  change24h: number;\r\n  change7d: number;\r\n  marketCap: number;\r\n  volume24h: number;\r\n  circulatingSupply: number;\r\n  maxSupply: number | null;\r\n  chartData: number[];\r\n  lastUpdate: number;\r\n}\r\n\r\ninterface CryptoState {\r\n  cryptos: CryptoData[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  wsConnected: boolean;\r\n}\r\n\r\nconst initialState: CryptoState = {\r\n  cryptos: [],\r\n  loading: false,\r\n  error: null,\r\n  wsConnected: false\r\n};\r\n\r\nexport const cryptoSlice = createSlice({\r\n  name: 'crypto',\r\n  initialState,\r\n  reducers: {\r\n    setCryptos: (state, action: PayloadAction<CryptoData[]>) => {\r\n      state.cryptos = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string>) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    setWsConnected: (state, action: PayloadAction<boolean>) => {\r\n      state.wsConnected = action.payload;\r\n    },\r\n    updateCryptoPrice: (state, action: PayloadAction<{\r\n      symbol: string;\r\n      price: number;\r\n      timestamp: number;\r\n    }>) => {\r\n      const crypto = state.cryptos.find(c => c.symbol === action.payload.symbol);\r\n      if (crypto) {\r\n        const oldPrice = crypto.price;\r\n        crypto.price = action.payload.price;\r\n        crypto.lastUpdate = action.payload.timestamp;\r\n        \r\n        // Update chart data\r\n        crypto.chartData = [...crypto.chartData.slice(1), action.payload.price];\r\n        \r\n        // Calculate price changes\r\n        const priceChange = ((action.payload.price - oldPrice) / oldPrice) * 100;\r\n        crypto.change1h = (crypto.change1h || 0) + priceChange;\r\n        crypto.change24h = (crypto.change24h || 0) + priceChange;\r\n        crypto.change7d = (crypto.change7d || 0) + priceChange;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const { \r\n  setCryptos, \r\n  setLoading, \r\n  setError, \r\n  setWsConnected,\r\n  updateCryptoPrice \r\n} = cryptoSlice.actions;\r\n\r\nexport default cryptoSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AA0B7D,MAAMC,YAAyB,GAAG;EAChCC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;EACrCO,IAAI,EAAE,QAAQ;EACdN,YAAY;EACZO,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAmC,KAAK;MAC1DD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO;MAC9BF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC;IACDY,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAA8B,KAAK;MACzDD,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,iBAAiB,EAAEA,CAACN,KAAK,EAAEC,MAIzB,KAAK;MACL,MAAMM,MAAM,GAAGP,KAAK,CAACR,OAAO,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKT,MAAM,CAACC,OAAO,CAACQ,MAAM,CAAC;MAC1E,IAAIH,MAAM,EAAE;QACV,MAAMI,QAAQ,GAAGJ,MAAM,CAACK,KAAK;QAC7BL,MAAM,CAACK,KAAK,GAAGX,MAAM,CAACC,OAAO,CAACU,KAAK;QACnCL,MAAM,CAACM,UAAU,GAAGZ,MAAM,CAACC,OAAO,CAACY,SAAS;;QAE5C;QACAP,MAAM,CAACQ,SAAS,GAAG,CAAC,GAAGR,MAAM,CAACQ,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC,EAAEf,MAAM,CAACC,OAAO,CAACU,KAAK,CAAC;;QAEvE;QACA,MAAMK,WAAW,GAAI,CAAChB,MAAM,CAACC,OAAO,CAACU,KAAK,GAAGD,QAAQ,IAAIA,QAAQ,GAAI,GAAG;QACxEJ,MAAM,CAACW,QAAQ,GAAG,CAACX,MAAM,CAACW,QAAQ,IAAI,CAAC,IAAID,WAAW;QACtDV,MAAM,CAACY,SAAS,GAAG,CAACZ,MAAM,CAACY,SAAS,IAAI,CAAC,IAAIF,WAAW;QACxDV,MAAM,CAACa,QAAQ,GAAG,CAACb,MAAM,CAACa,QAAQ,IAAI,CAAC,IAAIH,WAAW;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXlB,UAAU;EACVI,UAAU;EACVC,QAAQ;EACRC,cAAc;EACdC;AACF,CAAC,GAAGV,WAAW,CAACyB,OAAO;AAEvB,eAAezB,WAAW,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}