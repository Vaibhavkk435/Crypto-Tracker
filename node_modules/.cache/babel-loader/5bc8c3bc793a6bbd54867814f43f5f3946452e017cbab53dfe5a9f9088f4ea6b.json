{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\XYZ\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCryptos, updateCryptoPrice } from './features/crypto/cryptoSlice';\nimport './App.css';\n\n// Helper function to generate mock chart data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateMockChartData = () => {\n  const points = [];\n  let value = 100;\n  for (let i = 0; i < 24; i++) {\n    value = value * (1 + (Math.random() - 0.5) * 0.1);\n    points.push(value);\n  }\n  return points;\n};\n\n// Helper function to create SVG sparkline\nconst createSparkline = (data, color) => {\n  const width = 160;\n  const height = 50;\n  const padding = 4;\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const range = max - min;\n\n  // Create points for the smooth curve\n  const points = data.map((value, index) => {\n    const x = padding + index / (data.length - 1) * (width - 2 * padding);\n    const y = height - padding - (value - min) / range * (height - 2 * padding);\n    return `${x},${y}`;\n  }).join(' ');\n\n  // Create control points for the curved path\n  const path = data.map((value, index) => {\n    const x = padding + index / (data.length - 1) * (width - 2 * padding);\n    const y = height - padding - (value - min) / range * (height - 2 * padding);\n    return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\n  }).join(' ');\n\n  // Get the last point for the current price dot\n  const lastX = width - padding;\n  const lastY = height - padding - (data[data.length - 1] - min) / range * (height - 2 * padding);\n  const gradientColor = color.replace('%23', '#');\n  return `data:image/svg+xml;utf8,<svg viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n      <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n        <stop offset=\"0%\" style=\"stop-color:${color};stop-opacity:0.2\" />\n        <stop offset=\"100%\" style=\"stop-color:${color};stop-opacity:0\" />\n      </linearGradient>\n    </defs>\n    <path\n      d=\"${path} L ${width - padding},${height - padding} L ${padding},${height - padding} Z\"\n      fill=\"url(%23gradient)\"\n      stroke=\"none\"\n    />\n    <path\n      d=\"${path}\"\n      fill=\"none\"\n      stroke=\"${color}\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <circle\n      cx=\"${lastX}\"\n      cy=\"${lastY}\"\n      r=\"3\"\n      fill=\"${color}\"\n      stroke=\"rgba(255,255,255,0.5)\"\n      stroke-width=\"1\"\n    />\n  </svg>`;\n};\nconst mockCryptoData = [{\n  id: 'bitcoin',\n  name: 'Bitcoin',\n  symbol: 'BTC',\n  logo: 'https://assets.coingecko.com/coins/images/1/small/bitcoin.png',\n  price: 35000,\n  change1h: 0.5,\n  change24h: 2.5,\n  change7d: -1.2,\n  marketCap: 680000000000,\n  volume24h: 28500000000,\n  circulatingSupply: 19500000,\n  maxSupply: 21000000,\n  chartData: generateMockChartData()\n}, {\n  id: 'ethereum',\n  name: 'Ethereum',\n  symbol: 'ETH',\n  logo: 'https://assets.coingecko.com/coins/images/279/small/ethereum.png',\n  price: 2000,\n  change1h: -0.2,\n  change24h: 1.8,\n  change7d: 3.5,\n  marketCap: 240000000000,\n  volume24h: 15700000000,\n  circulatingSupply: 120000000,\n  maxSupply: null,\n  chartData: generateMockChartData()\n}, {\n  id: 'tether',\n  name: 'Tether',\n  symbol: 'USDT',\n  logo: 'https://assets.coingecko.com/coins/images/325/small/Tether.png',\n  price: 1,\n  change1h: 0.1,\n  change24h: 0.05,\n  change7d: 0.02,\n  marketCap: 83000000000,\n  volume24h: 32100000000,\n  circulatingSupply: 83000000000,\n  maxSupply: null,\n  chartData: generateMockChartData()\n}, {\n  id: 'binancecoin',\n  name: 'BNB',\n  symbol: 'BNB',\n  logo: 'https://assets.coingecko.com/coins/images/825/small/bnb-icon2_2x.png',\n  price: 310,\n  change1h: 0.8,\n  change24h: -1.2,\n  change7d: 2.1,\n  marketCap: 47000000000,\n  volume24h: 980000000,\n  circulatingSupply: 153000000,\n  maxSupply: 200000000,\n  chartData: generateMockChartData()\n}, {\n  id: 'solana',\n  name: 'Solana',\n  symbol: 'SOL',\n  logo: 'https://assets.coingecko.com/coins/images/4128/small/solana.png',\n  price: 98,\n  change1h: 1.5,\n  change24h: 3.2,\n  change7d: 5.8,\n  marketCap: 42000000000,\n  volume24h: 2100000000,\n  circulatingSupply: 410000000,\n  maxSupply: null,\n  chartData: generateMockChartData()\n}];\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    cryptos\n  } = useSelector(state => state.crypto);\n  useEffect(() => {\n    dispatch(setCryptos(mockCryptoData));\n    const interval = setInterval(() => {\n      mockCryptoData.forEach(crypto => {\n        const randomChange = (Math.random() - 0.5) * 2;\n        const newPrice = crypto.price * (1 + randomChange / 100);\n        dispatch(updateCryptoPrice({\n          id: crypto.id,\n          price: newPrice,\n          change1h: crypto.change1h + randomChange / 8,\n          change24h: crypto.change24h + randomChange / 4,\n          change7d: crypto.change7d + randomChange / 2\n        }));\n      });\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n  const formatNumber = (num, isCurrency = false) => {\n    if (num >= 1e9) {\n      return `${isCurrency ? '$' : ''}${(num / 1e9).toFixed(2)}B`;\n    }\n    if (num >= 1e6) {\n      return `${isCurrency ? '$' : ''}${(num / 1e6).toFixed(2)}M`;\n    }\n    return `${isCurrency ? '$' : ''}${num.toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Crypto Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"crypto-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"1h %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"24h %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"7d %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"24h Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Circulating Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max Supply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"7D Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cryptos.map((crypto, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"name-cell\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: crypto.logo,\n                alt: `${crypto.name} logo`,\n                className: \"crypto-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"crypto-name\",\n                children: crypto.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: crypto.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(crypto.price, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `change-cell ${crypto.change1h >= 0 ? 'positive' : 'negative'}`,\n              children: [crypto.change1h > 0 ? '+' : '', crypto.change1h.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `change-cell ${crypto.change24h >= 0 ? 'positive' : 'negative'}`,\n              children: [crypto.change24h > 0 ? '+' : '', crypto.change24h.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `change-cell ${crypto.change7d >= 0 ? 'positive' : 'negative'}`,\n              children: [crypto.change7d > 0 ? '+' : '', crypto.change7d.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(crypto.marketCap, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(crypto.volume24h, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [formatNumber(crypto.circulatingSupply), \" \", crypto.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: crypto.maxSupply ? formatNumber(crypto.maxSupply) : '∞'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"chart-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: createSparkline(crypto.chartData, crypto.change7d >= 0 ? '%234caf50' : '%23f44336'),\n                alt: `${crypto.name} 7-day chart`,\n                className: \"mini-chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, crypto.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ai+Vzjh9X617nNO7he32nTvm3tw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","setCryptos","updateCryptoPrice","jsxDEV","_jsxDEV","generateMockChartData","points","value","i","Math","random","push","createSparkline","data","color","width","height","padding","max","min","range","map","index","x","length","y","join","path","lastX","lastY","gradientColor","replace","mockCryptoData","id","name","symbol","logo","price","change1h","change24h","change7d","marketCap","volume24h","circulatingSupply","maxSupply","chartData","App","_s","dispatch","cryptos","state","crypto","interval","setInterval","forEach","randomChange","newPrice","clearInterval","formatNumber","num","isCurrency","toFixed","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/XYZ/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './app/store';\r\nimport { setCryptos, updateCryptoPrice } from './features/crypto/cryptoSlice';\r\nimport './App.css';\r\n\r\n// Helper function to generate mock chart data\r\nconst generateMockChartData = () => {\r\n  const points = [];\r\n  let value = 100;\r\n  for (let i = 0; i < 24; i++) {\r\n    value = value * (1 + (Math.random() - 0.5) * 0.1);\r\n    points.push(value);\r\n  }\r\n  return points;\r\n};\r\n\r\n// Helper function to create SVG sparkline\r\nconst createSparkline = (data: number[], color: string) => {\r\n  const width = 160;\r\n  const height = 50;\r\n  const padding = 4;\r\n  const max = Math.max(...data);\r\n  const min = Math.min(...data);\r\n  const range = max - min;\r\n  \r\n  // Create points for the smooth curve\r\n  const points = data\r\n    .map((value, index) => {\r\n      const x = padding + (index / (data.length - 1)) * (width - 2 * padding);\r\n      const y = height - padding - ((value - min) / range) * (height - 2 * padding);\r\n      return `${x},${y}`;\r\n    })\r\n    .join(' ');\r\n\r\n  // Create control points for the curved path\r\n  const path = data\r\n    .map((value, index) => {\r\n      const x = padding + (index / (data.length - 1)) * (width - 2 * padding);\r\n      const y = height - padding - ((value - min) / range) * (height - 2 * padding);\r\n      return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\r\n    })\r\n    .join(' ');\r\n\r\n  // Get the last point for the current price dot\r\n  const lastX = width - padding;\r\n  const lastY = height - padding - ((data[data.length - 1] - min) / range) * (height - 2 * padding);\r\n\r\n  const gradientColor = color.replace('%23', '#');\r\n  \r\n  return `data:image/svg+xml;utf8,<svg viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <defs>\r\n      <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n        <stop offset=\"0%\" style=\"stop-color:${color};stop-opacity:0.2\" />\r\n        <stop offset=\"100%\" style=\"stop-color:${color};stop-opacity:0\" />\r\n      </linearGradient>\r\n    </defs>\r\n    <path\r\n      d=\"${path} L ${width - padding},${height - padding} L ${padding},${height - padding} Z\"\r\n      fill=\"url(%23gradient)\"\r\n      stroke=\"none\"\r\n    />\r\n    <path\r\n      d=\"${path}\"\r\n      fill=\"none\"\r\n      stroke=\"${color}\"\r\n      stroke-width=\"1.5\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <circle\r\n      cx=\"${lastX}\"\r\n      cy=\"${lastY}\"\r\n      r=\"3\"\r\n      fill=\"${color}\"\r\n      stroke=\"rgba(255,255,255,0.5)\"\r\n      stroke-width=\"1\"\r\n    />\r\n  </svg>`;\r\n};\r\n\r\nconst mockCryptoData = [\r\n  {\r\n    id: 'bitcoin',\r\n    name: 'Bitcoin',\r\n    symbol: 'BTC',\r\n    logo: 'https://assets.coingecko.com/coins/images/1/small/bitcoin.png',\r\n    price: 35000,\r\n    change1h: 0.5,\r\n    change24h: 2.5,\r\n    change7d: -1.2,\r\n    marketCap: 680000000000,\r\n    volume24h: 28500000000,\r\n    circulatingSupply: 19500000,\r\n    maxSupply: 21000000,\r\n    chartData: generateMockChartData()\r\n  },\r\n  {\r\n    id: 'ethereum',\r\n    name: 'Ethereum',\r\n    symbol: 'ETH',\r\n    logo: 'https://assets.coingecko.com/coins/images/279/small/ethereum.png',\r\n    price: 2000,\r\n    change1h: -0.2,\r\n    change24h: 1.8,\r\n    change7d: 3.5,\r\n    marketCap: 240000000000,\r\n    volume24h: 15700000000,\r\n    circulatingSupply: 120000000,\r\n    maxSupply: null,\r\n    chartData: generateMockChartData()\r\n  },\r\n  {\r\n    id: 'tether',\r\n    name: 'Tether',\r\n    symbol: 'USDT',\r\n    logo: 'https://assets.coingecko.com/coins/images/325/small/Tether.png',\r\n    price: 1,\r\n    change1h: 0.1,\r\n    change24h: 0.05,\r\n    change7d: 0.02,\r\n    marketCap: 83000000000,\r\n    volume24h: 32100000000,\r\n    circulatingSupply: 83000000000,\r\n    maxSupply: null,\r\n    chartData: generateMockChartData()\r\n  },\r\n  {\r\n    id: 'binancecoin',\r\n    name: 'BNB',\r\n    symbol: 'BNB',\r\n    logo: 'https://assets.coingecko.com/coins/images/825/small/bnb-icon2_2x.png',\r\n    price: 310,\r\n    change1h: 0.8,\r\n    change24h: -1.2,\r\n    change7d: 2.1,\r\n    marketCap: 47000000000,\r\n    volume24h: 980000000,\r\n    circulatingSupply: 153000000,\r\n    maxSupply: 200000000,\r\n    chartData: generateMockChartData()\r\n  },\r\n  {\r\n    id: 'solana',\r\n    name: 'Solana',\r\n    symbol: 'SOL',\r\n    logo: 'https://assets.coingecko.com/coins/images/4128/small/solana.png',\r\n    price: 98,\r\n    change1h: 1.5,\r\n    change24h: 3.2,\r\n    change7d: 5.8,\r\n    marketCap: 42000000000,\r\n    volume24h: 2100000000,\r\n    circulatingSupply: 410000000,\r\n    maxSupply: null,\r\n    chartData: generateMockChartData()\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { cryptos } = useSelector((state: RootState) => state.crypto);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCryptos(mockCryptoData));\r\n\r\n    const interval = setInterval(() => {\r\n      mockCryptoData.forEach(crypto => {\r\n        const randomChange = (Math.random() - 0.5) * 2;\r\n        const newPrice = crypto.price * (1 + randomChange / 100);\r\n        dispatch(updateCryptoPrice({\r\n          id: crypto.id,\r\n          price: newPrice,\r\n          change1h: crypto.change1h + randomChange / 8,\r\n          change24h: crypto.change24h + randomChange / 4,\r\n          change7d: crypto.change7d + randomChange / 2,\r\n        }));\r\n      });\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch]);\r\n\r\n  const formatNumber = (num: number, isCurrency: boolean = false): string => {\r\n    if (num >= 1e9) {\r\n      return `${isCurrency ? '$' : ''}${(num / 1e9).toFixed(2)}B`;\r\n    }\r\n    if (num >= 1e6) {\r\n      return `${isCurrency ? '$' : ''}${(num / 1e6).toFixed(2)}M`;\r\n    }\r\n    return `${isCurrency ? '$' : ''}${num.toLocaleString(undefined, {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Crypto Tracker</h1>\r\n      </header>\r\n      <div className=\"table-container\">\r\n        <table className=\"crypto-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th style={{ textAlign: 'left' }}>Name</th>\r\n              <th>Symbol</th>\r\n              <th>Price</th>\r\n              <th>1h %</th>\r\n              <th>24h %</th>\r\n              <th>7d %</th>\r\n              <th>Market Cap</th>\r\n              <th>24h Volume</th>\r\n              <th>Circulating Supply</th>\r\n              <th>Max Supply</th>\r\n              <th>7D Chart</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cryptos.map((crypto, index) => (\r\n              <tr key={crypto.id}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"name-cell\">\r\n                  <img \r\n                    src={crypto.logo} \r\n                    alt={`${crypto.name} logo`} \r\n                    className=\"crypto-logo\"\r\n                  />\r\n                  <span className=\"crypto-name\">{crypto.name}</span>\r\n                </td>\r\n                <td>{crypto.symbol}</td>\r\n                <td>{formatNumber(crypto.price, true)}</td>\r\n                <td className={`change-cell ${crypto.change1h >= 0 ? 'positive' : 'negative'}`}>\r\n                  {crypto.change1h > 0 ? '+' : ''}{crypto.change1h.toFixed(2)}%\r\n                </td>\r\n                <td className={`change-cell ${crypto.change24h >= 0 ? 'positive' : 'negative'}`}>\r\n                  {crypto.change24h > 0 ? '+' : ''}{crypto.change24h.toFixed(2)}%\r\n                </td>\r\n                <td className={`change-cell ${crypto.change7d >= 0 ? 'positive' : 'negative'}`}>\r\n                  {crypto.change7d > 0 ? '+' : ''}{crypto.change7d.toFixed(2)}%\r\n                </td>\r\n                <td>{formatNumber(crypto.marketCap, true)}</td>\r\n                <td>{formatNumber(crypto.volume24h, true)}</td>\r\n                <td>{formatNumber(crypto.circulatingSupply)} {crypto.symbol}</td>\r\n                <td>{crypto.maxSupply ? formatNumber(crypto.maxSupply) : '∞'}</td>\r\n                <td className=\"chart-cell\">\r\n                  <img \r\n                    src={createSparkline(crypto.chartData, crypto.change7d >= 0 ? '%234caf50' : '%23f44336')}\r\n                    alt={`${crypto.name} 7-day chart`}\r\n                    className=\"mini-chart\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}